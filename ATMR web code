#include <WiFi.h>

// Wi-Fi credentials
const char* ssid = "user";
const char* password = "passwd";

// Motor control pins
const int IN1 = 32;
const int IN2 = 33;
const int IN3 = 25;
const int IN4 = 26;

WiFiServer server(80);

void setup() {
  Serial.begin(115200);

  // Motor pins setup
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println();
  Serial.println("WiFi connected.");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Start the server
  server.begin();
}

void loop() {
  WiFiClient client = server.available();
  if (client) {
    Serial.println("Client connected.");
    String request = client.readStringUntil('\r');
    Serial.println(request);
    client.flush();

    // Motor Control based on request
    if (request.indexOf("/forward") != -1) {
      forward();
    } else if (request.indexOf("/backward") != -1) {
      backward();
    } else if (request.indexOf("/left") != -1) {
      left();
    } else if (request.indexOf("/right") != -1) {
      right();
    } else if (request.indexOf("/stop") != -1) {
      stopMotors();
    }

    // HTML Page
    client.println("HTTP/1.1 200 OK");
    client.println("Content-Type: text/html");
    client.println();
    client.println("<!DOCTYPE html><html>");
    client.println("<head><title>ESP32 RC Car</title></head>");
    client.println("<body style='text-align:center;'>");
    client.println("<h2>ESP32 RC Car Control</h2>");
    client.println("<a href='/forward'><button style='height:60px;width:120px;'>Forward</button></a><br><br>");
    client.println("<a href='/left'><button style='height:60px;width:120px;'>Left</button></a>");
    client.println("<a href='/stop'><button style='height:60px;width:120px;'>Stop</button></a>");
    client.println("<a href='/right'><button style='height:60px;width:120px;'>Right</button></a><br><br>");
    client.println("<a href='/backward'><button style='height:60px;width:120px;'>Backward</button></a>");
    client.println("</body></html>");
    delay(1);
    Serial.println("Client disconnected.");
  }
}

// Motor control functions
void right() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void left() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void backward() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void forward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void stopMotors() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}
